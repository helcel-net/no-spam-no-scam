name: Release

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every Sunday at midnight UTC
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up jq
      run: sudo apt-get install jq

    - name: Run extraction script
      run: bash ch.sh
      id: extract

    - name: Get current year and week number
      id: date
      continue-on-error: true
      run: |
        YEAR_WEEK=$(date +'%Y.%V')
        YEAR_WEEK_COUNT=$(git tag -l "release-${YEAR_WEEK}*" | wc -l)
        YEAR_WEEK_STR="${YEAR_WEEK}.${YEAR_WEEK_COUNT}"
        echo "TAG_NAME=release-${YEAR_WEEK_STR}" >> $GITHUB_ENV
        echo "RELEASE_NAME=Release ${YEAR_WEEK_STR}" >> $GITHUB_ENV
        echo "Prepared ${RELEASE_NAME}"
    - name: Get new release diff
      id: diff
      run: |
        wget https://github.com/helcel-net/no-spam-no-scam/releases/latest/download/ch.txt -O old_release.txt
        echo "Fetched old release"
        ADDED=$(comm -13 <(sort old_release.txt) <(sort ch.txt) | wc -l)
        echo "."
        REMOVED=$(comm -23 <(sort old_release.txt) <(sort ch.txt) | wc -l)
        echo ".."
        diff_output=$(diff -u -U0 <(tr ',' '\n' < old_release.txt) <(tr ',' '\n' < ch.txt)) || true 
        echo "..."
        echo "Completed diff logs"
        DIFF=""
        if [ "$ADDED" -gt 0 ]; then
          echo "Added: $ADDED" > diff.txt
        fi
        echo "."
        if [ "$REMOVED" -gt 0 ]; then
          echo "Removed: $REMOVED" > diff.txt
        fi
        echo ".."
        echo "**Changelog:**" > diff.txt
        echo "${diff_output}" > diff.txt
        echo "..."
        echo "Generated body"
        echo "RELEASE_DIFF=$(cat diff.txt | grep -vE '^(---|\+\+\+|@@)')" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: ${{ env.RELEASE_NAME }}
        body: ${{ env.RELEASE_DIFF }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ch.txt
        asset_name: ch.txt
        asset_content_type: text/plain
